from __future__ import division
import torch
import torch.nn as nn
from yolodet.models.common_py import Conv, Focus, Catneck, Incept, Detect, Resneck

class YOLO(nn.Module):
    def __init__(self, nc, anchors, ch, heads=None):
        super().__init__()

        self.conv1 = nn.Conv2d(in_channels=3, out_channels=32, kernel_size=(3, 3), stride=(2, 2), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm1 = nn.BatchNorm2d(num_features=32)
        self.leaky_relu1 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv2 = nn.Conv2d(in_channels=32, out_channels=64, kernel_size=(3, 3), stride=(2, 2), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm2 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu2 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv3 = nn.Conv2d(in_channels=64, out_channels=32, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm3 = nn.BatchNorm2d(num_features=32)
        self.leaky_relu3 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv4 = nn.Conv2d(in_channels=32, out_channels=32, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm4 = nn.BatchNorm2d(num_features=32)
        self.leaky_relu4 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv5 = nn.Conv2d(in_channels=32, out_channels=32, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm5 = nn.BatchNorm2d(num_features=32)
        self.leaky_relu5 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv6 = nn.Conv2d(in_channels=64, out_channels=32, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm6 = nn.BatchNorm2d(num_features=32)
        self.leaky_relu6 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv7 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm7 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu7 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv8 = nn.Conv2d(in_channels=64, out_channels=128, kernel_size=(3, 3), stride=(2, 2), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm8 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu8 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv9 = nn.Conv2d(in_channels=128, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm9 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu9 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv10 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm10 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu10 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv11 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm11 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu11 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv12 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm12 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu12 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv13 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm13 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu13 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv14 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm14 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu14 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv15 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm15 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu15 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv16 = nn.Conv2d(in_channels=128, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm16 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu16 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv17 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm17 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu17 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv18 = nn.Conv2d(in_channels=128, out_channels=256, kernel_size=(3, 3), stride=(2, 2), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm18 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu18 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv19 = nn.Conv2d(in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm19 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu19 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv20 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm20 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu20 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv21 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm21 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu21 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv22 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm22 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu22 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv23 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm23 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu23 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv24 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm24 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu24 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv25 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm25 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu25 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv26 = nn.Conv2d(in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm26 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu26 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv27 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm27 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu27 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv28 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=(2, 2), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm28 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu28 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv29 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm29 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu29 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv30 = nn.Conv2d(in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm30 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu30 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv31 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm31 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu31 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv32 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm32 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu32 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv33 = nn.Conv2d(in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm33 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu33 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv34 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm34 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu34 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv35 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm35 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu35 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.upsample1 = nn.Upsample(scale_factor=2, mode="nearest")
        self.conv36 = nn.Conv2d(in_channels=512, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm36 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu36 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv37 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm37 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu37 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv38 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm38 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu38 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv39 = nn.Conv2d(in_channels=512, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm39 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu39 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv40 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm40 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu40 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv41 = nn.Conv2d(in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm41 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu41 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.upsample2 = nn.Upsample(scale_factor=2, mode="nearest")
        self.conv42 = nn.Conv2d(in_channels=256, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm42 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu42 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv43 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm43 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu43 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv44 = nn.Conv2d(in_channels=64, out_channels=64, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm44 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu44 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv45 = nn.Conv2d(in_channels=256, out_channels=64, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm45 = nn.BatchNorm2d(num_features=64)
        self.leaky_relu45 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv46 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm46 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu46 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv47 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=(2, 2), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm47 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu47 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv48 = nn.Conv2d(in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm48 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu48 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv49 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm49 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu49 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv50 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm50 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu50 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv51 = nn.Conv2d(in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm51 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu51 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv52 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm52 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu52 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv53 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=(2, 2), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm53 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu53 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv54 = nn.Conv2d(in_channels=512, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm54 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu54 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv55 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm55 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu55 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv56 = nn.Conv2d(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=(1, 1), dilation=1, padding=(1, 1), groups=1, bias=False)
        self.batch_norm56 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu56 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv57 = nn.Conv2d(in_channels=512, out_channels=128, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm57 = nn.BatchNorm2d(num_features=128)
        self.leaky_relu57 = nn.LeakyReLU(negative_slope=0.1, inplace=True)
        self.conv58 = nn.Conv2d(in_channels=256, out_channels=256, kernel_size=(1, 1), stride=(1, 1), dilation=1, padding=(0, 0), groups=1, bias=False)
        self.batch_norm58 = nn.BatchNorm2d(num_features=256)
        self.leaky_relu58 = nn.LeakyReLU(negative_slope=0.1, inplace=True)

        self.detect = Detect(nc, anchors, [128, 256, 256])

    def forward(self, *x):
        data, *other = x

        conv_blob = self.conv1(data)
        conv_blob = self.batch_norm1(conv_blob)
        conv_blob = self.leaky_relu1(conv_blob)
        conv_blob4 = self.conv2(conv_blob)
        conv_blob4 = self.batch_norm2(conv_blob4)
        conv_blob4 = self.leaky_relu2(conv_blob4)
        conv_blob5 = self.conv3(conv_blob4)
        conv_blob5 = self.batch_norm3(conv_blob5)
        conv_blob5 = self.leaky_relu3(conv_blob5)
        conv_blob6 = self.conv4(conv_blob5)
        conv_blob6 = self.batch_norm4(conv_blob6)
        conv_blob6 = self.leaky_relu4(conv_blob6)
        conv_blob7 = self.conv5(conv_blob6)
        conv_blob7 = self.batch_norm5(conv_blob7)
        conv_blob7 = self.leaky_relu5(conv_blob7)
        add_blob = conv_blob5+ conv_blob7
        conv_blob8 = self.conv6(conv_blob4)
        conv_blob8 = self.batch_norm6(conv_blob8)
        conv_blob8 = self.leaky_relu6(conv_blob8)
        cat_blob = torch.cat([add_blob, conv_blob8], dim=1)
        conv_blob9 = self.conv7(cat_blob)
        conv_blob9 = self.batch_norm7(conv_blob9)
        conv_blob9 = self.leaky_relu7(conv_blob9)
        conv_blob10 = self.conv8(conv_blob9)
        conv_blob10 = self.batch_norm8(conv_blob10)
        conv_blob10 = self.leaky_relu8(conv_blob10)
        conv_blob11 = self.conv9(conv_blob10)
        conv_blob11 = self.batch_norm9(conv_blob11)
        conv_blob11 = self.leaky_relu9(conv_blob11)
        conv_blob12 = self.conv10(conv_blob11)
        conv_blob12 = self.batch_norm10(conv_blob12)
        conv_blob12 = self.leaky_relu10(conv_blob12)
        conv_blob13 = self.conv11(conv_blob12)
        conv_blob13 = self.batch_norm11(conv_blob13)
        conv_blob13 = self.leaky_relu11(conv_blob13)
        add_blob2 = conv_blob11+ conv_blob13
        conv_blob14 = self.conv12(add_blob2)
        conv_blob14 = self.batch_norm12(conv_blob14)
        conv_blob14 = self.leaky_relu12(conv_blob14)
        conv_blob15 = self.conv13(conv_blob14)
        conv_blob15 = self.batch_norm13(conv_blob15)
        conv_blob15 = self.leaky_relu13(conv_blob15)
        add_blob3 = add_blob2+ conv_blob15
        conv_blob16 = self.conv14(add_blob3)
        conv_blob16 = self.batch_norm14(conv_blob16)
        conv_blob16 = self.leaky_relu14(conv_blob16)
        conv_blob17 = self.conv15(conv_blob16)
        conv_blob17 = self.batch_norm15(conv_blob17)
        conv_blob17 = self.leaky_relu15(conv_blob17)
        add_blob4 = add_blob3+ conv_blob17
        conv_blob18 = self.conv16(conv_blob10)
        conv_blob18 = self.batch_norm16(conv_blob18)
        conv_blob18 = self.leaky_relu16(conv_blob18)
        cat_blob2 = torch.cat([add_blob4, conv_blob18], dim=1)
        conv_blob19 = self.conv17(cat_blob2)
        conv_blob19 = self.batch_norm17(conv_blob19)
        conv_blob19 = self.leaky_relu17(conv_blob19)
        conv_blob20 = self.conv18(conv_blob19)
        conv_blob20 = self.batch_norm18(conv_blob20)
        conv_blob20 = self.leaky_relu18(conv_blob20)
        conv_blob21 = self.conv19(conv_blob20)
        conv_blob21 = self.batch_norm19(conv_blob21)
        conv_blob21 = self.leaky_relu19(conv_blob21)
        conv_blob22 = self.conv20(conv_blob21)
        conv_blob22 = self.batch_norm20(conv_blob22)
        conv_blob22 = self.leaky_relu20(conv_blob22)
        conv_blob23 = self.conv21(conv_blob22)
        conv_blob23 = self.batch_norm21(conv_blob23)
        conv_blob23 = self.leaky_relu21(conv_blob23)
        add_blob5 = conv_blob21+ conv_blob23
        conv_blob24 = self.conv22(add_blob5)
        conv_blob24 = self.batch_norm22(conv_blob24)
        conv_blob24 = self.leaky_relu22(conv_blob24)
        conv_blob25 = self.conv23(conv_blob24)
        conv_blob25 = self.batch_norm23(conv_blob25)
        conv_blob25 = self.leaky_relu23(conv_blob25)
        add_blob6 = add_blob5+ conv_blob25
        conv_blob26 = self.conv24(add_blob6)
        conv_blob26 = self.batch_norm24(conv_blob26)
        conv_blob26 = self.leaky_relu24(conv_blob26)
        conv_blob27 = self.conv25(conv_blob26)
        conv_blob27 = self.batch_norm25(conv_blob27)
        conv_blob27 = self.leaky_relu25(conv_blob27)
        add_blob7 = add_blob6+ conv_blob27
        conv_blob28 = self.conv26(conv_blob20)
        conv_blob28 = self.batch_norm26(conv_blob28)
        conv_blob28 = self.leaky_relu26(conv_blob28)
        cat_blob3 = torch.cat([add_blob7, conv_blob28], dim=1)
        conv_blob29 = self.conv27(cat_blob3)
        conv_blob29 = self.batch_norm27(conv_blob29)
        conv_blob29 = self.leaky_relu27(conv_blob29)
        conv_blob30 = self.conv28(conv_blob29)
        conv_blob30 = self.batch_norm28(conv_blob30)
        conv_blob30 = self.leaky_relu28(conv_blob30)
        conv_blob31 = self.conv29(conv_blob30)
        conv_blob31 = self.batch_norm29(conv_blob31)
        conv_blob31 = self.leaky_relu29(conv_blob31)
        conv_blob32 = self.conv30(conv_blob31)
        conv_blob32 = self.batch_norm30(conv_blob32)
        conv_blob32 = self.leaky_relu30(conv_blob32)
        conv_blob33 = self.conv31(conv_blob32)
        conv_blob33 = self.batch_norm31(conv_blob33)
        conv_blob33 = self.leaky_relu31(conv_blob33)
        conv_blob34 = self.conv32(conv_blob33)
        conv_blob34 = self.batch_norm32(conv_blob34)
        conv_blob34 = self.leaky_relu32(conv_blob34)
        conv_blob35 = self.conv33(conv_blob31)
        conv_blob35 = self.batch_norm33(conv_blob35)
        conv_blob35 = self.leaky_relu33(conv_blob35)
        cat_blob4 = torch.cat([conv_blob34, conv_blob35], dim=1)
        conv_blob36 = self.conv34(cat_blob4)
        conv_blob36 = self.batch_norm34(conv_blob36)
        conv_blob36 = self.leaky_relu34(conv_blob36)
        conv_blob37 = self.conv35(conv_blob36)
        conv_blob37 = self.batch_norm35(conv_blob37)
        conv_blob37 = self.leaky_relu35(conv_blob37)
        upsample_blob = self.upsample1(conv_blob37)
        cat_blob5 = torch.cat([upsample_blob, conv_blob29], dim=1)
        conv_blob38 = self.conv36(cat_blob5)
        conv_blob38 = self.batch_norm36(conv_blob38)
        conv_blob38 = self.leaky_relu36(conv_blob38)
        conv_blob39 = self.conv37(conv_blob38)
        conv_blob39 = self.batch_norm37(conv_blob39)
        conv_blob39 = self.leaky_relu37(conv_blob39)
        conv_blob40 = self.conv38(conv_blob39)
        conv_blob40 = self.batch_norm38(conv_blob40)
        conv_blob40 = self.leaky_relu38(conv_blob40)
        conv_blob41 = self.conv39(cat_blob5)
        conv_blob41 = self.batch_norm39(conv_blob41)
        conv_blob41 = self.leaky_relu39(conv_blob41)
        cat_blob6 = torch.cat([conv_blob40, conv_blob41], dim=1)
        conv_blob42 = self.conv40(cat_blob6)
        conv_blob42 = self.batch_norm40(conv_blob42)
        conv_blob42 = self.leaky_relu40(conv_blob42)
        conv_blob43 = self.conv41(conv_blob42)
        conv_blob43 = self.batch_norm41(conv_blob43)
        conv_blob43 = self.leaky_relu41(conv_blob43)
        upsample_blob2 = self.upsample2(conv_blob43)
        cat_blob7 = torch.cat([upsample_blob2, conv_blob19], dim=1)
        conv_blob44 = self.conv42(cat_blob7)
        conv_blob44 = self.batch_norm42(conv_blob44)
        conv_blob44 = self.leaky_relu42(conv_blob44)
        conv_blob45 = self.conv43(conv_blob44)
        conv_blob45 = self.batch_norm43(conv_blob45)
        conv_blob45 = self.leaky_relu43(conv_blob45)
        conv_blob46 = self.conv44(conv_blob45)
        conv_blob46 = self.batch_norm44(conv_blob46)
        conv_blob46 = self.leaky_relu44(conv_blob46)
        conv_blob47 = self.conv45(cat_blob7)
        conv_blob47 = self.batch_norm45(conv_blob47)
        conv_blob47 = self.leaky_relu45(conv_blob47)
        cat_blob8 = torch.cat([conv_blob46, conv_blob47], dim=1)
        conv_blob48 = self.conv46(cat_blob8)
        conv_blob48 = self.batch_norm46(conv_blob48)
        conv_blob48 = self.leaky_relu46(conv_blob48)
        conv_blob49 = self.conv47(conv_blob48)
        conv_blob49 = self.batch_norm47(conv_blob49)
        conv_blob49 = self.leaky_relu47(conv_blob49)
        cat_blob9 = torch.cat([conv_blob49, conv_blob43], dim=1)
        conv_blob50 = self.conv48(cat_blob9)
        conv_blob50 = self.batch_norm48(conv_blob50)
        conv_blob50 = self.leaky_relu48(conv_blob50)
        conv_blob51 = self.conv49(conv_blob50)
        conv_blob51 = self.batch_norm49(conv_blob51)
        conv_blob51 = self.leaky_relu49(conv_blob51)
        conv_blob52 = self.conv50(conv_blob51)
        conv_blob52 = self.batch_norm50(conv_blob52)
        conv_blob52 = self.leaky_relu50(conv_blob52)
        conv_blob53 = self.conv51(cat_blob9)
        conv_blob53 = self.batch_norm51(conv_blob53)
        conv_blob53 = self.leaky_relu51(conv_blob53)
        cat_blob10 = torch.cat([conv_blob52, conv_blob53], dim=1)
        conv_blob54 = self.conv52(cat_blob10)
        conv_blob54 = self.batch_norm52(conv_blob54)
        conv_blob54 = self.leaky_relu52(conv_blob54)
        conv_blob55 = self.conv53(conv_blob54)
        conv_blob55 = self.batch_norm53(conv_blob55)
        conv_blob55 = self.leaky_relu53(conv_blob55)
        cat_blob11 = torch.cat([conv_blob55, conv_blob37], dim=1)
        conv_blob56 = self.conv54(cat_blob11)
        conv_blob56 = self.batch_norm54(conv_blob56)
        conv_blob56 = self.leaky_relu54(conv_blob56)
        conv_blob57 = self.conv55(conv_blob56)
        conv_blob57 = self.batch_norm55(conv_blob57)
        conv_blob57 = self.leaky_relu55(conv_blob57)
        conv_blob58 = self.conv56(conv_blob57)
        conv_blob58 = self.batch_norm56(conv_blob58)
        conv_blob58 = self.leaky_relu56(conv_blob58)
        conv_blob59 = self.conv57(cat_blob11)
        conv_blob59 = self.batch_norm57(conv_blob59)
        conv_blob59 = self.leaky_relu57(conv_blob59)
        cat_blob12 = torch.cat([conv_blob58, conv_blob59], dim=1)
        conv_blob60 = self.conv58(cat_blob12)
        conv_blob60 = self.batch_norm58(conv_blob60)
        conv_blob60 = self.leaky_relu58(conv_blob60)

        return self.detect([conv_blob48, conv_blob54, conv_blob60])

if __name__ == '__main__':
    x = torch.ones([2, 3, 256, 256])
    model = YOLO(nc=1, anchors=[[10,10]], ch=3, heads=None)
    model(x)
